---
description: 
globs: 
alwaysApply: true
---
# 安全规则

## 数据安全

1. 敏感数据（如数据库密码）必须加密存储
2. 用户输入必须经过验证和过滤，防止注入攻击
3. 本地存储敏感信息时使用操作系统安全 API（如 Keychain、Credential Vault）
4. 非必要情况下，不持久化存储用户敏感数据
5. 日志中不得记录敏感信息（密码、令牌等）
6. 导出的数据必须提供加密选项

## Electron 安全

1. 禁用 Node 集成（nodeIntegration: false）
2. 启用上下文隔离（contextIsolation: true）
3. 使用内容安全策略（CSP）限制资源加载
4. 定期更新 Electron 和依赖包，修复已知漏洞
5. 限制远程内容加载，使用 `electron.shell.openExternal` 打开外部链接
6. 谨慎使用 `dangerouslySetInnerHTML` 或类似可能导致 XSS 的 API

## 通信安全

1. IPC 通信必须验证消息来源
2. IPC 消息内容需要验证，防止恶意输入
3. 禁止在不安全环境下传输敏感信息
4. 与远程 API 通信时使用 HTTPS
5. API 调用需要适当的访问控制和速率限制

## 错误处理

1. 禁止向用户展示详细的技术错误信息
2. 错误日志中避免泄露敏感信息
3. 在生产环境中捕获所有未处理的异常，不暴露堆栈信息
4. 严重错误需要记录并上报，便于分析解决

## 代码安全

1. 避免使用有安全隐患的函数（如 eval）
2. 使用安全的依赖包，定期检查依赖漏洞
3. 禁止在代码中硬编码敏感信息
4. 定期进行安全代码审计
5. 遵循最小权限原则，只授予必要的权限
